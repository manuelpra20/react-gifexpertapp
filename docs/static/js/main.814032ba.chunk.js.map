{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGrifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGrifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAQ,IAC9BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDV,SAACA,GAAc,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAqBxC,OAdCC,qBAAW,WAEHxB,EAAQC,GAAUwB,MAAK,SAAAC,GAGnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAEEqB,EDjB6BK,CAAc1B,GAAjCa,EAHmB,EAGxBN,KAAaa,EAHW,EAGXA,QAKpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEpB7BgB,EAAe,WAAO,IAAD,EAIMzC,mBAAS,CAAC,aAJhB,mBAIvB0C,EAJuB,KAIX3C,EAJW,KAO9B,OACI,qCACI,oBAAI+B,UAAU,SAAd,2CACA,cAAC,EAAD,CAAa/B,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCZ5B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.814032ba.chunk.js","sourcesContent":["import React, {useState}  from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length >2) {\r\n        setCategories( cats => [inputValue, ...cats ]);\r\n        setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=gUfSwwUJA5cIoRIpVZBuA6oeHulZJ9EU`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    // console.log(title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGrifs } from '../hooks/useFetchGrifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n      \r\n        const {data:images, loading} = useFetchGrifs(category);\r\n       \r\n     \r\n       \r\n\r\n        return (\r\n            <>\r\n                <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n                {loading && <p className=\"animate__animated animate__flash\">loading</p> }\r\n\r\n                <div className=\"card-grid\">\r\n                        {\r\n                            images.map(img => (\r\n                            \r\n                                <GifGridItem\r\n                                key ={img.id}\r\n                                { ...img  }\r\n                                />\r\n                            ))\r\n                        }\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGrifs = (category) => {\r\n   const [state, setstate] = useState({\r\n       data: [],\r\n       loading: true\r\n   });\r\n   \r\n\r\n    useEffect( () =>{\r\n       \r\n            getGifs(category).then(imgs =>{\r\n\r\n               \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n             \r\n            });\r\n              \r\n    }, [category])\r\n\r\n   return state; //el state es [ data: [] ,loading: ture]\r\n}\r\n","import React, {useState} from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n \r\n\r\n    const [categories, setCategories] = useState(['Avengers'])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"centro\">GifExpertApp by: Manuel Prado</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                       <GifGrid \r\n                       key={category}\r\n                       category={category} \r\n                       />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp'\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}